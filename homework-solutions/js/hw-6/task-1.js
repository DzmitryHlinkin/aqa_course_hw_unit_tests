/*
1. Цикл for..of в массиве
  - Создайте массив [1,2,3,4,5,6,7,8,9,10]
  - Создайте цикл for..of, бегущий по массиву, в котором будет реализована следующая логика:
    если элемент четный - возведет его в квадрат
    если элемент нечетный - возведет его в 3ю степень

  Значение добавьте в массив 'forOf' 
*/

let massiv = [1,2,3,4,5,6,7,8,9,10]
const forOf = [];
for(const chislo of massiv) {
  if(Math.floor(chislo/2) === chislo/2){
    kvadrat = chislo*chislo
    forOf.push(kvadrat)
  }
  else {
    kub = chislo*chislo*chislo
    forOf.push(kub)
  }
}
console.log(forOf)


/*
2. Методы массивов
  - Создайте массив [1,2,3,4,5]
  - Добавьте в конец массива число 6 соответствующим методом
  - Добавьте в начало массива число 0 соответствующим методом
  - Удалите элемент с индексом 2 из массива соответствующим методом
  - Удалите последний элемент из массива соответствующим методом

  В результате вы должны получить массив [0, 1, 3, 4, 5], присвойте в переменную "result"
*/
let massiv2 = [1,2,3,4,5]

massiv2.push(6)
massiv2.unshift(0)
massiv2.splice(2, 1)
massiv2.pop()

let result= massiv2



/*
3. Деструктуризация массивов
  - Создайте массив [3, 11, 32, 7, 20] 
  - Через деструктуризацию получите в новые переменные первый, второй и остальные элементы массива

  Пример: [1,2,3,4,5] => first === 1; second === 2, rest === [3,4,5]
*/
const destruct = [3, 11, 32, 7, 20] 
const [first, second, ...rest] = destruct
console.log(second)
console.log(rest)

/*
4. Конкатенация массивов
  - Создайте массив с числами [1,2,3,4,5]
  - Создайте еще 1 массив с числами [6, 7, 8, 9, 10]
  - Используйте спред оператор

  Создайте переменную mergedArray, который будет хранить значения из массивов 1 и 2
*/
let numbers1 = [1,2,3,4,5]
let numbers2 = [6, 7, 8, 9, 10]
const mergedArray = [...numbers1, ...numbers2]
console.log(mergedArray)

export { forOf, result, first, second, rest, mergedArray };
